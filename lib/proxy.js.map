{"version":3,"sources":["proxy.js"],"names":[],"mappings":"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","file":"proxy.js","sourcesContent":["'use strict';\nvar config = require('config');\nvar path = require('path');\nvar errors = require('@hoist/errors');\nvar Authorization = require('./authorization');\nvar fs = require('fs');\nimport {\n  filter\n}\nfrom 'lodash';\nimport {\n  BouncerToken\n}\nfrom '@hoist/model';\nimport logger from '@hoist/logger';\n\n\n/**\n * a proxy class to the underlying connector\n */\nclass ConnectorProxy {\n  /**\n   * setup the connector proxy described by the {@link ConnectorSetting} object\n   * @param {ConnectorSetting} connectorSetting - the settings for the underlying connector\n   */\n  constructor(connectorSetting) {\n    this._logger = logger.child({\n      cls: this.constructor.name,\n      applicationId: connectorSetting.application,\n      connectorKey: connectorSetting.key\n    });\n    this._connectorSetting = connectorSetting;\n    let connectorsPath = path.resolve(config.get('Hoist.filePaths.connectors'));\n    let connectorPath = path.join(connectorsPath, connectorSetting.connectorType, 'current');\n    this._connectorPath = fs.realpathSync(connectorPath);\n    this._settings = this._connectorSetting.settings;\n  }\n\n  /**\n   * initialize this proxy instance\n   * @param {Context} context - the current context\n   * @returns {Promise<ConnectorProxy>} - this proxy object to allow chaining\n   */\n  init(context) {\n    return Promise.resolve()\n      .then(() => {\n        let ConnectorType = require(this._connectorPath);\n        this._connector = new ConnectorType(this._settings);\n        let methods = filter(Object.getOwnPropertyNames(Object.getPrototypeOf((this._connector))), (property) => {\n          if (property.startsWith('_') || property === 'receiveBounce' || this[property] || property === 'constructor') {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        this._logger.info({\n          connector: this._connector,\n          methods\n        }, 'mapping methods');\n        methods.forEach((method) => {\n          /**\n           * also has all methods of underlying connector\n           */\n          this[method] = (...params) => {\n            this._logger.info('proxying method ' + method);\n            if (typeof this._connector[method] !== 'function') {\n              let methodType = typeof this._connector[method];\n              this._logger.warn({\n                methodType\n              }, 'tried to call an unsupported method');\n              throw new errors.connector.request.UnsupportedError(method + ' method unsupported');\n            }\n            return this._connector[method].apply(this._connector, params);\n          };\n        });\n        if (context.bucket &&\n          context.bucket.meta &&\n          context.bucket.meta.authToken &&\n          context.bucket.meta.authToken[this._connectorSetting.key]) {\n          return this.authorize(context.bucket.meta.authToken[this._connectorSetting.key])\n            .catch((err) => {\n              this._logger.error(err);\n              if (err instanceof errors.connector.request.InvalidError) {\n                return this;\n              } else {\n                throw err;\n              }\n            });\n        } else {\n          return this;\n        }\n      });\n  }\n\n  /**\n   * authorize the underlying connector\n   * @param {Authorization|String} token - either the authorization object or a bouncer token key\n   * @returns {Promise<ConnectorProxy>} - this\n   */\n  authorize(token) {\n    if (typeof this._connector.authorize !== 'function') {\n      return Promise.resolve(this);\n    }\n    if (typeof token === 'string') {\n      return BouncerToken.findOneAsync({\n        key: token\n      }).then((bouncerToken) => {\n        if (!bouncerToken) {\n          throw new errors.connector.request.InvalidError('the authorization token provided is not valid');\n        }\n        return this._connector.authorize(new Authorization(bouncerToken));\n      }).then(() => {\n        return this;\n      });\n    } else {\n      return Promise.resolve(this._connector.authorize(token))\n        .then(() => {\n          return this;\n        });\n    }\n  }\n}\n\nexport default ConnectorProxy;\n\n/**\n * @external {ConnectorSetting} https://github.com/hoist/hoist-model/blob/master/lib/models/connector_setting.js\n */\n/**\n * @external {Context} https://github.com/hoist/hoist-context/blob/master/lib/index.js\n */\n"],"sourceRoot":"/source/"}